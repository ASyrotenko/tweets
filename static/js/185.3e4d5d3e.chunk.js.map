{"version":3,"file":"static/js/185.3e4d5d3e.chunk.js","mappings":"2NAAaA,EAAkB,SAAAC,GAC7B,OAAO,IAAIC,KAAKC,aAAa,SAASC,OAAOH,EAC/C,ECDA,EAAuB,0BAAvB,EAAwD,0BAAxD,EAAyF,0BAAzF,EAAgI,gCAAhI,EAAuK,0BAAvK,EAAgN,kCAAhN,EAAwP,yBAAxP,EAA0R,4BAA1R,EAAkU,+BAAlU,EAA0W,4BAA1W,EAAuZ,oCAAvZ,EAAic,yB,SCO3bI,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,oBAkDrD,EAhDmB,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACpBC,GAAkCC,EAAAA,EAAAA,UAASR,GAAgB,IAAGS,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,IAE9BI,EAAAA,EAAAA,YAAU,WACRV,aAAaW,QAAQ,kBAAmBb,KAAKc,UAAUJ,GACzD,GAAG,CAACA,EAAWL,IAEf,IAAMU,EAAmB,SAAAC,GACvB,IAAMC,EAASD,EAAEE,cAAcC,QAAQC,OAEnCV,EAAUW,SAASJ,GACrBN,GAAa,SAAAW,GAAS,OAAIA,EAAUC,QAAO,SAAAC,GAAE,OAAIA,IAAOP,CAAM,GAAC,IAE/DN,GAAa,SAAAW,GAAS,SAAAG,QAAAC,EAAAA,EAAAA,GAAQJ,GAAS,CAAEL,GAAS,IAGpDf,aAAaW,QAAQ,kBAAmBb,KAAKc,UAAUJ,GACzD,EAEMiB,EAAWtB,EAAMuB,KAAI,SAAAC,GAAA,IAAGL,EAAEK,EAAFL,GAAIM,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAAQC,EAASH,EAATG,UAAWC,EAAMJ,EAANI,OAAM,OAC/DC,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAASC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKC,I,6/BAAWC,IAAI,OAAOL,UAAWC,KACtCE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,KAChBE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAiBC,UAC/BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKN,EAAQO,IAAKV,EAAMK,UAAWC,OAE1CE,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,KAChBF,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAWC,SAAA,CAAE3C,EAAgBqC,GAAQ,cACnDG,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAcC,SAAA,CACzB3B,EAAUW,SAASG,GAChB9B,EAAgBsC,EAAY,GAC5BtC,EAAgBsC,GAAY,IAAI,gBAGtCM,EAAAA,EAAAA,KAAA,UACEG,KAAK,SACLN,UAAWzB,EAAUW,SAASG,GAAMY,EAAqBA,EACzDM,QAAS3B,EACT,cAAaS,EAAGa,SAEf3B,EAAUW,SAASG,GAAM,YAAc,aApBnCA,EAsBJ,IAGP,OAAOc,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAASC,SAAEV,GACnC,ECtDMgB,E,QAAWC,EAAMC,OAAO,CAC5BC,QAAS,oDAGEC,EAAW,eAAA3C,GAAA4C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAI,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZf,EAASgB,IAAI,SAAU,CAC5CC,OAAQ,CACNC,MAAO,EACPT,KAAAA,KAED,KAAD,EALU,OAKVC,EAAAG,EAAAM,KALMR,EAAID,EAAJC,KAAIE,EAAAO,OAAA,SAMLT,GAAI,wBAAAE,EAAAQ,OAAA,GAAAb,EAAA,KACZ,gBARuBc,GAAA,OAAA7D,EAAA8D,MAAA,KAAAC,UAAA,KCJlBC,E,QAASC,GAEFC,EAAe,SAAAlB,GAC1B,GAAIA,EAAO,EAAG,CACZ,IAAgBmB,EAAeC,SAC5BC,cAAc,MACdC,kBAAkBC,wBAFbC,OAGRR,EAAOS,WAAwB,GAAbN,EACpB,CACF,ECsDA,EAvDmB,WACjB,IAAAjE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BD,EAAKG,EAAA,GAAEsE,EAAQtE,EAAA,GACtBuE,GAAwBxE,EAAAA,EAAAA,UAAS,GAAEyE,GAAAvE,EAAAA,EAAAA,GAAAsE,EAAA,GAA5B3B,EAAI4B,EAAA,GAAEC,EAAOD,EAAA,GACpBE,GAA8B3E,EAAAA,EAAAA,WAAS,GAAM4E,GAAA1E,EAAAA,EAAAA,GAAAyE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0B/E,EAAAA,EAAAA,UAAS,MAAKgF,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,IAEtB3E,EAAAA,EAAAA,YAAU,WACR,IAAM8E,EAAQ,eAAAtF,GAAA4C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAwC,EAAA,OAAA1C,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OAAjB2B,GAAW,GAAM7B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMX,EAAYK,GAAM,KAAD,EAA1B,GAANuC,EAAMnC,EAAAM,KACC,IAATV,EAAU,CAAAI,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SACLe,GAAQpD,EAAAA,EAAAA,GAAKiE,KAAQ,OAE9Bb,GAAS,SAAAxD,GAAS,SAAAG,QAAAC,EAAAA,EAAAA,GAAQJ,IAASI,EAAAA,EAAAA,GAAKiE,GAAM,IAC9CrB,EAAalB,GAAMI,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoC,GAAApC,EAAA,SAEnBiC,EAASjC,EAAAoC,GAAMC,SAAS,QAEN,OAFMrC,EAAAC,KAAA,GAExB4B,GAAW,GAAO7B,EAAAsC,OAAA,6BAAAtC,EAAAQ,OAAA,GAAAb,EAAA,yBAErB,kBAda,OAAA/C,EAAA8D,MAAA,KAAAC,UAAA,KAgBduB,GACF,GAAG,CAACtC,IAMJ,OACElB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWE,SAAA,CACvB+C,IACC9C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAoBE,UACjCC,EAAAA,EAAAA,KAACyD,EAAAA,GAAQ,CAACC,MAAM,eAGpB1D,EAAAA,EAAAA,KAAC2D,EAAAA,GAAO,CAACC,GAAE,IAAO/D,UAAWC,EAAQC,SAAC,YAGrCmD,IACClD,EAAAA,EAAAA,KAAA,KAAGH,UAAU,eAAcE,SAAC,mDAI9BC,EAAAA,EAAAA,KAAC6D,EAAU,CAAC9F,MAAOA,IAClBA,EAAM+F,OAAS,IACd9D,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAASC,QArBT,WACjBuC,GAAQ,SAAA3D,GAAS,OAAIA,EAAY,CAAC,GACpC,EAmBiDa,UAAU,cAAaE,SAAC,gBAM3E,C","sources":["components/shared/scripts/newNumberFormat.js","webpack://tweets/./src/components/modules/TweetsList/tweets-list.module.css?7e30","components/modules/TweetsList/TweetsList.jsx","components/shared/api/tweets.js","components/shared/scripts/smoothScroll.js","components/pages/TweetsPage.jsx"],"sourcesContent":["export const newNumberFormat = number => {\r\n  return new Intl.NumberFormat('en-IN').format(number);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"tweets-list_list__K9VlN\",\"item\":\"tweets-list_item__LYFoE\",\"logo\":\"tweets-list_logo__k-z-9\",\"topImgWrap\":\"tweets-list_topImgWrap__MLkao\",\"line\":\"tweets-list_line__fUMsX\",\"imgContainer\":\"tweets-list_imgContainer__Nb3QB\",\"img\":\"tweets-list_img__2VPon\",\"tweets\":\"tweets-list_tweets__mSrGG\",\"followers\":\"tweets-list_followers__Ro6Ij\",\"button\":\"tweets-list_button__5unik\",\"buttonFollowed\":\"tweets-list_buttonFollowed__YVM+O\",\"btn\":\"tweets-list_btn__ndDcV\"};","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { newNumberFormat } from '../../shared/scripts/newNumberFormat';\r\n\r\nimport css from './tweets-list.module.css';\r\nimport logo from '../../../images/logo.png';\r\n\r\nconst initialUsers = JSON.parse(localStorage.getItem('following-users'));\r\n\r\nconst TweetsList = ({ items }) => {\r\n  const [following, setFollowing] = useState(initialUsers || []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('following-users', JSON.stringify(following));\r\n  }, [following, items]);\r\n\r\n  const toggleFollowUser = e => {\r\n    const userId = e.currentTarget.dataset.userid;\r\n\r\n    if (following.includes(userId)) {\r\n      setFollowing(prevState => prevState.filter(id => id !== userId));\r\n    } else {\r\n      setFollowing(prevState => [...prevState, userId]);\r\n    }\r\n\r\n    localStorage.setItem('following-users', JSON.stringify(following));\r\n  };\r\n\r\n  const elements = items.map(({ id, user, tweets, followers, avatar }) => (\r\n    <li key={id} className={css.item}>\r\n      <img src={logo} alt=\"logo\" className={css.logo} />\r\n      <div className={css.topImgWrap}></div>\r\n      <div className={css.imgContainer}>\r\n        <img src={avatar} alt={user} className={css.img} />\r\n      </div>\r\n      <div className={css.line}></div>\r\n      <p className={css.tweets}>{newNumberFormat(tweets)} Tweets</p>\r\n      <p className={css.followers}>\r\n        {following.includes(id)\r\n          ? newNumberFormat(followers + 1)\r\n          : newNumberFormat(followers)}{' '}\r\n        Followers\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className={following.includes(id) ? css.buttonFollowed : css.button}\r\n        onClick={toggleFollowUser}\r\n        data-userid={id}\r\n      >\r\n        {following.includes(id) ? 'Following' : 'Follow'}\r\n      </button>\r\n    </li>\r\n  ));\r\n\r\n  return <ul className={css.list}>{elements}</ul>;\r\n};\r\n\r\nexport default TweetsList;\r\n\r\nTweetsList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      user: PropTypes.string.isRequired,\r\n      tweets: PropTypes.number.isRequired,\r\n      followers: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://63e7a515cbdc5658737ae834.mockapi.io/api',\r\n});\r\n\r\nexport const getAllUsers = async page => {\r\n  const { data } = await instance.get('/users', {\r\n    params: {\r\n      limit: 3,\r\n      page,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n","import * as Scroll from 'react-scroll';\r\n\r\nconst scroll = Scroll.animateScroll;\r\n\r\nexport const smoothScroll = page => {\r\n  if (page > 1) {\r\n    const { height: cardHeight } = document\r\n      .querySelector('li')\r\n      .firstElementChild.getBoundingClientRect();\r\n    scroll.scrollMore(cardHeight * 20);\r\n  }\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { TailSpin } from 'react-loader-spinner';\r\n\r\nimport TweetsList from '../modules/TweetsList/TweetsList';\r\nimport css from '../modules/TweetsList/tweets-list.module.css';\r\n\r\nimport { getAllUsers } from '../shared/api/tweets';\r\nimport { smoothScroll } from '../shared/scripts/smoothScroll';\r\n\r\nconst TweetsPage = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const result = await getAllUsers(page);\r\n        if (page === 1) {\r\n          return setItems([...result]);\r\n        }\r\n        setItems(prevState => [...prevState, ...result]);\r\n        smoothScroll(page);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAPI();\r\n  }, [page]);\r\n\r\n  const onLoadMore = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading && (\r\n        <div className=\"loading__container\">\r\n          <TailSpin color=\"#5cd3a8\" />\r\n        </div>\r\n      )}\r\n      <NavLink to={`/`} className={css.btn}>\r\n        Go Home\r\n      </NavLink>\r\n      {error && (\r\n        <p className=\"errorMassege\">\r\n          Oops. Something goes wrong. Please try again.\r\n        </p>\r\n      )}\r\n      <TweetsList items={items} />\r\n      {items.length > 0 && (\r\n        <button type=\"button\" onClick={onLoadMore} className=\"loadMoreBtn\">\r\n          Load more\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetsPage;\r\n"],"names":["newNumberFormat","number","Intl","NumberFormat","format","initialUsers","JSON","parse","localStorage","getItem","_ref","items","_useState","useState","_useState2","_slicedToArray","following","setFollowing","useEffect","setItem","stringify","toggleFollowUser","e","userId","currentTarget","dataset","userid","includes","prevState","filter","id","concat","_toConsumableArray","elements","map","_ref2","user","tweets","followers","avatar","_jsxs","className","css","children","_jsx","src","alt","type","onClick","instance","axios","create","baseURL","getAllUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","_yield$instance$get","data","wrap","_context","prev","next","get","params","limit","sent","abrupt","stop","_x","apply","arguments","scroll","Scroll","smoothScroll","cardHeight","document","querySelector","firstElementChild","getBoundingClientRect","height","scrollMore","setItems","_useState3","_useState4","setPage","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","fetchAPI","result","t0","message","finish","TailSpin","color","NavLink","to","TweetsList","length"],"sourceRoot":""}